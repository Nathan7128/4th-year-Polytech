border D1(t = 0, pi){
    x = 0.4*cos(pi - t);
    y = 0.4*sin(pi - t);
}

border D2(t = 0, pi) {
    x = cos(t);
    y = sin(t);
}

border Sg(t = -1, -0.4) {
    x = t;
    y = 0;
}

border Sd(t = 0.4, 1) {
    x = t;
    y = 0;
}

mesh Th = buildmesh(Sg(20) + D1(40) + Sd(20) + D2(100));

//Definition de l'espace des elements finis P1 associe au maillage Th
fespace Vh(Th, P1);

//uh et vh sont des elements de Vh
Vh uh, vh;

//Definition du probleme variationnel
problem laplacien(uh, vh, solver = LU) = int2d(Th)(dx(uh)*dx(vh) + dy(uh)*dy(vh)) + on(D1, uh = 0) + on(D2, uh = 1);

laplacien;

// Calcul de l'erreur
func u = (log(x*x + y*y) + log(6.25))/log(6.25);
Vh error = u - uh;

real errH1 = sqrt(int2d(Th)(error^2 + dx(error)^2 + dy(error)^2));

cout << "Erreur H1 " << errH1 << endl << endl;

plot(uh, wait = true);