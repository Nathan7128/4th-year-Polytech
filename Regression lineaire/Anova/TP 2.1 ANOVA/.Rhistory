setwd("C:\Users\natha\Documents\Git\4th-year-Polytech\Regression lineaire\Regression linéaire\TP 2.1 ANOVA")
setwd("C://Users//natha//Documents//Git//4th-year-Polytech//Regression lineaire//Regression linéaire//TP 2.1 ANOVA")
load("canard.Rdata")
View(canard)
source("~/.active-rstudio-document")
str(canard)
# 3)
table(canard)
# 3)
table(canard("alim", "espece"))
# 3)
table(canard(c("alim", "espece")))
# 3)
table(canard["alim", "espece"])
# 3)
table(canard$alim, canard$espece)
(canard$alim, canard$espece)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(poids alim + espece + espece:alim)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm("poids" "alim" + "espece" + "espece":"alim")
help(lm)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm("poids" ~ "alim" + "espece" + "espece":"alim")
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(poids ~ alim + espece + espece:alim)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(canard, poids ~ alim + espece + espece:alim)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(poids ~ alim + espece + espece:alim, canard)
setwd("C://Users//natha//Documents//Git//4th-year-Polytech//Regression lineaire//Regression linéaire//TP 2.1 ANOVA")
load("canard.Rdata")
attach(canard)
names(canard)
head(canard, 15)
dim(canard)
summary(canard)
level(alim)
levels(alim)
levels(espece)
str(canard)
library(ggplot2)
ggplot(data = canard, aes(x = alim:espece, y = poids)) +
geom_boxplot()
?ggplot
ggplot(data = canard, aes(x = alim:espece, y = poids)) +
geom_boxplot(color = "blue", fill = "red", alpha = 0.2)
alim:espece
# Variante par espèce
ggplot(data = canard, aes(x = alim, y = poids, fill = espece)) +
geom_boxplot(color = "blue", fill = "red", alpha = 0.2)
# Variante par violin
ggplot(data = canard, aes(x = alim, y = poids, fill = espece)) +
geom_violin(color = "blue", fill = "red", alpha = 0.2)
# Boxplot avec les fonctions de base de R
boxplot(poids = alim:espece, data = canard, xlab = "alimentation x espece",
ylab = "poids")
# Boxplot avec les fonctions de base de R
boxplot(poids~alim:espece, data = canard, xlab = "alimentation x espece",
ylab = "poids")
# 3)
table(canard$alim, canard$espece)
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(poids ~ alim + espece + espece:alim, canard)
summary(model)
library(car)
setwd("C://Users//natha//Documents//Git//4th-year-Polytech//Regression lineaire//Regression linéaire//TP 2.1 ANOVA")
load("canard.Rdata")
attach(canard)
names(canard)
head(canard, 15)
dim(canard)
summary(canard)
levels(alim)
levels(espece)
str(canard)
# --------------------------------
# ANALYSE DESCRIPTIVE
# --------------------------------
library(ggplot2)
ggplot(data = canard, aes(x = alim:espece, y = poids)) +
geom_boxplot(color = "blue", fill = "red", alpha = 0.2)
# Variante par espèce
ggplot(data = canard, aes(x = alim, y = poids, fill = espece)) +
geom_boxplot(color = "blue", fill = "red", alpha = 0.2)
# Variante par violin
ggplot(data = canard, aes(x = alim, y = poids, fill = espece)) +
geom_violin(color = "blue", fill = "red", alpha = 0.2)
# Boxplot avec les fonctions de base de R
boxplot(poids~alim:espece, data = canard, xlab = "alimentation x espece",
ylab = "poids")
# 1)
# Variable quali : alim et espece
# Variable quanti : poids
# 2)
# Il faut donc effectuer une analyse de la variance à 2 facteurs
# 3)
table(canard$alim, canard$espece)
# Complet équilibré car même effectifs pour chaque combinaison des facteurs alim et espèce
# 4) On peut donc utiliser un modèle avec interaction car le plan est complet
model = lm(poids ~ alim + espece + espece:alim, canard)
summary(model)
library(car)
Anova(model, type = 2)
?(Anova)
?Anova
# graphe des résidus
plot(model, 1)
plot(jitter(model$fit), model$res, xlab = "fitted", ylab = "residuals",
main = "Jittered plot")
# graphe des résidus
plot(model, 1)
# test de levene library(car) Ho : "il y'a pas d'heteroscedasticité
leveneTest(poids~espece*alim, canard)
# Regardons la normalité des résidus
plot(model, 2)
# avec qqplot
qqPlot(model, main = "QQ plot")
# test de normalité de Shapiro Wilks
# Ho : les résidus sont normaux
shapiro.test(residuals(model))
# -----------------------------------------------------------
# TEST DES EFFETS PRINCIPAUX ET DE L'INTERACTION
# -----------------------------------------------------------
# On étudie quels sont les niveaux qui influent le + la réponse
# Regle : on commence toujours par regarder l'interaction
library(emmeans)
# graphe d'interaction
emmip(model, espece ~ alim)
emmip(model, alim ~ espece)
# On voit que le meilleur rendement sera pour le niveau 2 avec l'espece gris
# En fonction de l'alimentation, ce ne sera pas la même espèce de canard qui sera préférée
# C'est la conséquence de l'interaction
# On ne peut pas comparer les facteurs especes sans regarder l'alimentation
emmip(model, alim ~ espece)
# On s'intéresse maintenant à savoir si pour une alimentation donnée, les canards sont équivalents
joint_tests(model, by = alim)
# On s'intéresse maintenant à savoir si pour une alimentation donnée, les canards sont équivalents
joint_tests(model, by = "alim")
# Et effet de alim en fonction de espece
joint_tests(model, by = "alim")
# Et effet de alim en fonction de espece
joint_tests(model, by = "espece")
?joint_tests
# On s'intéresse maintenant à savoir si pour une alimentation donnée, les canards sont équivalents
# si pvalue significative (inférieure au niveau du test par exemple 0.05), alors les écarts
# entre les espèces est significative pour l'alimentation en question
joint_tests(model, by = "alim")
# Et effet de alim en fonction de espece
# si pvalue significative (inférieure au niveau du test par exemple 0.05), alors les écarts
# entre les alimentations est significative pour l'espece en question
joint_tests(model, by = "espece")
# emmeans des interactions + comparaison par pair
em = emmeans(model, ~espece:alim)
pairs(em)
# emmeans des interactions + comparaison par pair
em = emmeans(model, ~ espece:alim)
pairs(em)
em
# La commande pairs permet de comparer les interactions entre elles
pairs(em)
# graphe d'interaction
# La seule chose qui nous intéresse est d'étudier les points du graphe
# et non la différences entre les niveaux
emmip(model, espece ~ alim)
# On voit que le meilleur rendement sera pour le niveau 2 avec l'espece gris
# En fonction de l'alimentation, ce ne sera pas la même espèce de canard qui sera préférée
# C'est la conséquence de l'interaction
# On ne peut pas comparer les facteurs especes sans regarder l'alimentation
emmip(model, alim ~ espece)
# -----------------------------------------------------------
# ERREUR A NE PAS COMMETTRE
# -----------------------------------------------------------
# Si on avait pas mit d'interaction dans le modèle :
modelFaux = lm(poids ~ espece + alim)
Anova(modelFaux)
Anova(modelFaux, type = 2)
emmip(modelFaux, espece ~ alim)
emmip(modelFaux, espece ~ espece)
emmip(modelFaux, alim ~ espece)
setwd("C://Users//natha//Documents//Git//4th-year-Polytech//Anova//Regression linéaire//TP 2.1 ANOVA")
setwd("C://Users//natha//Documents//Git//4th-year-Polytech//Regression lineaire//Anova//TP 2.1 ANOVA")
